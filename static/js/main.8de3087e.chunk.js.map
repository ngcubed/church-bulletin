{"version":3,"sources":["state/action-defs.js","state/actions.js","client/awsClient.js","client/awsSTS.js","state/action-store.js","components/shared/shared-defs.js","components/agenda/agendaLogic.js","components/agenda/agenda-item.jsx","components/agenda/agenda.jsx","components/announcements/announcementLogic.js","components/announcements/announcementSection.jsx","components/announcements/announcements.jsx","components/cover/cover.jsx","components/lesson/lesson.jsx","components/shared/spinner.jsx","components/program/program.jsx","components/admin/login.jsx","components/shared/secure-route.jsx","components/admin/loginLogic.js","components/admin/dashboard-tile.jsx","components/admin/dashboard.jsx","components/admin/bulletin.jsx","components/admin/qr-generator.jsx","components/admin/nav.jsx","components/admin/dashboard-container.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_COVER","SET_AGENDA","SET_ANNOUNCEMENTS","SET_LESSON","IS_LOADING","SET_BULLETIN","SET_ERROR_MSG","SET_USER","UNSET_USER","SET_TOKEN","UNSET_TOKEN","setCover","cover","type","payload","setAgenda","agenda","setAnnouncements","announcements","setLesson","lesson","findNextSunday","AWS","STS","daysToSunday","DateTime","local","weekday","plus","days","getLatestBulletin","dispatch","a","urlParams","URLSearchParams","window","location","search","day","axios","get","headers","params","d","toFormat","response","status","data","logo","process","bulletin","console","log","statusText","getLatestCover","Store","React","createContext","initialState","errMsg","isLoading","token","user","reducer","state","action","useStore","findFunc","useContext","useDispatch","StoreProvider","props","useReducer","value","Provider","children","SONG_TYPES","PRAYER_TYPES","AGENDA_ITEMS","ANNOUNCEMENT_TYPES","GENERAL","PRIMARY","YMYW","ELDERS","RS","MISSIONARIES","getSpecialSongByOrder","songs","find","special","includes","split","order","AgendaItem","label","item","charAt","slice","toLowerCase","title","speakers","name","prayers","prayer","getPrayerByType","className","song","getSongByType","desc","number","Agenda","useEffect","latestAgenda","error","getAgenda","orderedAgenda","map","agendaItem","index","getAnnouncementTypeMappings","mapping","AnnouncementSection","length","announcement","parse","marked","message","Announcements","latestAnnouncements","getAnnouncements","groupedAnnouncements","Object","values","filteredAnnouncements","messages","filter","getAnnouncementsByType","Cover","getCovers","handleScroll","document","getElementsByClassName","style","top","pageYOffset","addEventListener","removeEventListener","formattedDate","fromISO","date","src","alt","id","image","height","innerHeight","Lesson","event","lessonContent","containerRect","getBoundingClientRect","lessonImage","transform","latestLesson","getLesson","imgURL","header","block","Spinner","undefined","Program","getBulletin","Login","history","useHistory","onSignIn","googleUser","push","gapi","load","auth2","init","client_id","then","signin2","render","catch","err","Error","SecureRoute","Component","component","otherProps","getAuthResponse","expires_at","expired","fromMillis","isUserActive","DashboardTile","useState","isReverse","setReversed","cn","published","handleReverse","transitionDelay","onClick","width","Dashboard","tile","Bulletin","QRGenerator","Nav","names","navSelected","handleNav","DashboardContainer","selectNav","nav","activeComponent","App","routes","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8de3087e.chunk.js","sourcesContent":["export const SET_COVER = 'SET_COVER';\nexport const SET_AGENDA = 'SET_AGENDA';\nexport const SET_ANNOUNCEMENTS = \"SET_ANNOUNCEMENTS\";\nexport const SET_LESSON = \"SET_LESSON\";\nexport const IS_LOADING = \"IS_LOADING\"\nexport const SET_BULLETIN = \"SET_BULLETIN\";\nexport const SET_ERROR_MSG = \"SET_ERROR_MSG\";\nexport const SET_USER = \"SET_USER\";\nexport const UNSET_USER = \"UNSET_USER\";\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const UNSET_TOKEN = \"UNSET_TOKEN\";","import {IS_LOADING, SET_AGENDA, SET_ANNOUNCEMENTS, SET_BULLETIN, SET_COVER, SET_ERROR_MSG, SET_LESSON, SET_TOKEN, SET_USER, UNSET_TOKEN, UNSET_USER} from './action-defs';\n\nexport const setBulletin = (bulletin) => {\n    return {\n        type: SET_BULLETIN,\n        payload: bulletin\n    }\n}\n\nexport const setErrorMessage = (message) => {\n    return {\n        type: SET_ERROR_MSG,\n        payload: message\n    }\n}\n\nexport const setCover = (cover) => {\n    return {\n        type: SET_COVER,\n        payload: cover\n    }\n}\n\nexport const setAgenda = (agenda) => {\n    return {\n        type: SET_AGENDA,\n        payload: agenda\n    }\n}\n\nexport const setAnnouncements = (announcements) => {\n    return {\n        type: SET_ANNOUNCEMENTS,\n        payload: announcements\n    }\n}\n\nexport const setLesson = (lesson) => {\n    return {\n        type: SET_LESSON,\n        payload: lesson\n    }\n}\n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER,\n        payload: user\n    }\n}\n\nexport const unsetUser = () => {\n    return {\n        type: UNSET_USER\n    }\n}\n\nexport const setToken = (token) => {\n    return {\n        type: SET_TOKEN,\n        payload: token\n    }\n}\n\nexport const unsetToken = () => {\n    return {\n        type: UNSET_TOKEN\n    }\n}\n\nexport const isLoading = (isLoading) => {\n    return {\n        type: IS_LOADING,\n        payload: isLoading\n    }\n}","import axios from 'axios';\nimport {DateTime} from 'luxon';\nimport { isLoading, setBulletin, setErrorMessage } from '../state/actions';\nimport { getSecureTokensFromSTS } from './awsSTS';\nimport aws4 from 'aws4';\nimport { isAWSTokenValid } from './awsLogic';\n\nconst findNextSunday = () => {\n    let daysToSunday = 7 - DateTime.local().weekday;\n    return DateTime.local().plus({days: daysToSunday});\n}\n\nexport const getLatestBulletin = async (dispatch) => {\n\n    let urlParams = new URLSearchParams(window.location.search);\n\n    let day = DateTime.local();\n    if(day.weekday !== '0') {\n        day = findNextSunday();\n    }\n\n    try {\n        dispatch(isLoading(true));\n        let response = await axios.get('https://7qseesv2jh.execute-api.us-east-2.amazonaws.com/default/churchBulletin', {\n                headers: {\n                    'X-Api-Key': `${urlParams.get('key')}`,\n                    'Content-Type' : 'application/json'\n                }, \n                params: {\n                    d: `${day.toFormat('yyyy-MM-dd')}`\n                }\n            });\n        if(response.status === 200) {\n            response.data.cover.logo = process.env.PUBLIC_URL + '/oaktree.png';\n            dispatch(setBulletin(response.data));\n        } else {\n            console.log(response.status, \" \", response.statusText,\" \", response)\n        }\n    } catch (error) {\n        dispatch(setErrorMessage('Please refresh to try again'));\n    }\n}\n\nexport const getDashboard = async (dispatch, userToken, awsAcccess) => {\n    try {\n        let data = awsAcccess ? awsAcccess : null;\n        if(data === null || !isAWSTokenValid(awsAcccess)) {\n            data = await getSecureTokensFromSTS(dispatch, userToken);\n        }\n        console.log('back in dashboard, data is: ', data);\n        let request = {\n            host: 'c43o0u35nf.execute-api.us-east-2.amazonaws.com',\n            method: 'GET',\n            url: 'https://c43o0u35nf.execute-api.us-east-2.amazonaws.com/default',\n            path: '/default'\n        }\n        let signedRequest = aws4.sign(request, {\n            secretAccessKey: data.Credentials.SecretAccessKey,\n            accessKeyId: data.Credentials.AccessKeyId,\n            sessionToken: data.Credentials.SessionToken\n        });\n        delete signedRequest.headers['Host']\n        delete signedRequest.headers['Content-Length']\n        let response = await axios(signedRequest);\n        if(response.status === 200) {\n            console.log('200 response: ', response.data);\n        }\n    } catch(err) {\n        console.log('back in dashboard, err is : ', err)\n    }\n}\n\nexport const getLatestCover = async () => {\n    \n}\n\nexport const getLatestAgenda = () => {\n\n}\n\nexport const getLatestAnnouncements = () => {\n    \n}\n\nexport const getLatestLesson = () => {\n\n}","import AWS from 'aws-sdk';\nimport { setToken } from '../state/actions';\nlet sts = new AWS.STS({});\n\nexport const getSecureTokensFromSTS = async (dispatch, idToken) => {\n    const config = {\n        RoleArn: 'arn:aws:iam::164535879341:role/church-bulletin-admin-role',\n        RoleSessionName: 'church-bulletin-admin-session',\n        WebIdentityToken: idToken\n    };\n    return await new Promise((resolve, reject) => {\n        sts.assumeRoleWithWebIdentity(config, (err, data) => {\n            if(err) {\n                reject(err);\n            }\n            if(data) {\n                dispatch(setToken(data));\n                resolve(data);\n            }\n        });\n    });\n}\n","import React, {useReducer, useContext} from 'react';\n\nimport {IS_LOADING, SET_AGENDA, SET_ANNOUNCEMENTS, SET_BULLETIN, SET_COVER, SET_ERROR_MSG, SET_LESSON, SET_TOKEN, SET_USER, UNSET_TOKEN, UNSET_USER} from './action-defs';\n\nexport const Store = React.createContext();\n\nconst initialState = {\n    agenda: null,\n    announcements: null,\n    cover: null,\n    errMsg: null,\n    isLoading: true,\n    lesson: null,\n    token: null,\n    user: null\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_BULLETIN:\n            return {\n                ...state,\n                cover: action.payload.cover,\n                agenda: action.payload.agenda,\n                announcements: action.payload.announcements,\n                lesson: action.payload.lesson,\n                isLoading: false\n            }\n        case SET_COVER:\n            return {...state, cover: action.payload}   \n        case SET_AGENDA:\n            return {...state, agenda: action.payload}\n        case SET_ANNOUNCEMENTS:\n            return {...state, announcements: action.payload}\n        case SET_LESSON:\n            return {...state, lesson: action.payload}\n        case IS_LOADING:\n            return {...state, isLoading: action.payload}\n        case SET_ERROR_MSG:\n            return {...state, errMsg: action.payload}\n        case SET_USER:\n            return {...state, user: action.payload}\n        case UNSET_USER:\n            return {...state, user: null}\n        case SET_TOKEN:\n            return {...state, token: action.payload}\n        case UNSET_TOKEN:\n            return {...state, token: null}\n        default:\n            return state;\n    }\n}\n\nexport const useStore = (findFunc) => {\n    const {state} = useContext(Store);\n    return findFunc ? findFunc(state) : state;\n}\n\nexport const useDispatch = () => {\n    const {dispatch} = useContext(Store);\n    return dispatch; \n}\n\nexport const StoreProvider = (props) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const value = {\n        state,\n        dispatch\n    };\n\n    return (\n        <Store.Provider value={value}>{props.children}</Store.Provider>\n    )\n}","export const SONG_TYPES = {\n    OPENING: \"OPENING\",\n    CLOSING: \"CLOSING\",\n    INTERMEDIATE: \"INTERMEDIATE\",\n    SPECIAL: \"SPECIAL\",\n    SACRAMENT: \"SACRAMENT\"\n}\n\nexport const PRAYER_TYPES = {\n    OPENING: \"OPENING\",\n    CLOSING: \"CLOSING\"\n}\n\nexport const AGENDA_ITEMS = {\n    SONG: \"SONG\",\n    SPEAKER: \"SPEAKER\",\n    PRAYER: \"PRAYER\",\n    TESTIMONY: \"TESTIMONY\",\n    SACRAMENT: \"SACRAMENT\",\n    PRESIDING: \"PRESIDING\",\n    CONDUCTING: 'CONDUCTING',\n    CHORISTER: 'CHORISTER',\n    ORGANIST: 'ORGANIST'\n}\n\nexport const ANNOUNCEMENT_TYPES = {\n    GENERAL: \"GENERAL\",\n    PRIMARY: 'PRIMARY',\n    YMYW: 'YMYW',\n    ELDERS: 'ELDERS',\n    RS: 'RS',\n    MISSIONARIES: 'MISSIONARIES'\n}","import { SONG_TYPES } from \"../shared/shared-defs\"\n\nexport const getSongByType = (type, songs) => {\n    if(type.includes(SONG_TYPES.SPECIAL)) {\n        return getSpecialSongByOrder(type, songs);\n    } else {\n        return songs.find((song) => {\n            return song.type === type\n        })\n    }\n}\n\nexport const getSpecialSongByOrder = (type, songs) => {\n    return songs.find(special => special.type.includes(SONG_TYPES.SPECIAL) && type.split('-')[1] === special.order)\n}\n\nexport const getSpeakerByOrder = (type, speakers) => {\n    return speakers.find(order => order.order === type)\n}\n\nexport const getPrayerByType = (type, prayers) => {\n    return prayers.find(prayer => prayer.type === type)\n}","import React from 'react';\nimport { useStore } from '../../state/action-store'\nimport { AGENDA_ITEMS, PRAYER_TYPES, SONG_TYPES } from '../shared/shared-defs';\nimport { getPrayerByType, getSongByType, getSpeakerByOrder } from './agendaLogic';\n\nconst AgendaItem = (props) => {\n    const { agenda } = useStore();\n    if(!agenda) return <></>;\n\n    let label = props.item.charAt(0) + props.item.slice(1).toLowerCase() + ':';\n    let value;\n    let title = '';\n\n    switch (props.item) {\n        case AGENDA_ITEMS.PRESIDING:\n        case AGENDA_ITEMS.CONDUCTING:\n        case AGENDA_ITEMS.CHORISTER:\n        case AGENDA_ITEMS.ORGANIST:\n            value = agenda[props.item.toLowerCase()];\n            break;\n        case AGENDA_ITEMS.SPEAKER:\n            const speaker = getSpeakerByOrder(props.type, agenda.speakers);\n            value = speaker.name;\n            break;\n        case AGENDA_ITEMS.PRAYER:\n            const prayer = getPrayerByType(props.type, agenda.prayers);\n            value = prayer.name;\n            if(props.type === PRAYER_TYPES.OPENING) {\n                label = 'Invocation'\n            }\n            if(props.type === PRAYER_TYPES.CLOSING) {\n                label = 'Benediction'\n            }\n            break;\n        case AGENDA_ITEMS.SACRAMENT:\n        case AGENDA_ITEMS.TESTIMONY:\n            label = '';\n            value = '';\n            if(props.item === AGENDA_ITEMS.TESTIMONY) {\n                title = <div className='agenda-item-title'><strong>Sharing of Testimonies</strong></div>\n            } else {\n                title = <div className='agenda-item-title'><strong>Administration of the Sacrament</strong></div>\n            }\n            break;\n        case AGENDA_ITEMS.SONG:\n            const song = getSongByType(props.type, agenda.songs);\n            if(props.type.includes(SONG_TYPES.SPECIAL)) {\n                label = song.desc;\n                title = <div className='agenda-item-title'>{song.title}</div>\n                value = song.number\n                break;\n            } else {\n                label = props.type.charAt(0) + props.type.slice(1).toLowerCase() + \" Song:\";\n            }\n            value = song.number;\n            title = <div className='agenda-item-title'>{song.title}</div>\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className='agenda-item-container'>\n            <div className='agenda-item-label-value'>\n                <div className='agenda-item-label'>{label}</div>\n                <div className='agenda-item-value'>{value}</div>\n            </div>\n          {title}\n        </div>\n    );\n}\n\nexport default AgendaItem;","import React, {useEffect} from 'react';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport {getLatestAgenda} from '../../client/awsClient';\nimport {setAgenda} from '../../state/actions';\nimport './agenda.scss';\nimport AgendaItem from './agenda-item';\nimport { AGENDA_ITEMS } from '../shared/shared-defs';\n\nconst Agenda = () => {\n    const { agenda } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getAgenda = async () => {\n            const latestAgenda = await getLatestAgenda();\n            if(latestAgenda.error) {\n                console.log('unable to get the latest agenda');\n            } else {\n                dispatch(setAgenda(latestAgenda));\n            }\n        };\n        if(agenda === null) {\n            getAgenda();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(!agenda) return <></>;\n\n    const orderedAgenda = agenda.order.map((agendaItem, index) => {\n        return <AgendaItem item={agendaItem.item} type={agendaItem.type} key={agendaItem.item+agendaItem.type+index} />\n    })\n\n    return (\n        <div className='agenda-container'>\n            <h2>Agenda</h2>\n            <div className='agenda-whos-who'>\n                <AgendaItem item={AGENDA_ITEMS.PRESIDING} />\n                <AgendaItem item={AGENDA_ITEMS.CONDUCTING} />\n                <AgendaItem item={AGENDA_ITEMS.CHORISTER} />\n                <AgendaItem item={AGENDA_ITEMS.ORGANIST} />\n            </div>\n            {orderedAgenda}\n        </div>\n    )\n}\n\nexport default Agenda;","import { ANNOUNCEMENT_TYPES } from \"../shared/shared-defs\";\n\nexport const getAnnouncementsByType = (type, announcements) => {\n    return announcements.messages.filter(announcement => announcement.type === type)\n}\n\nexport const getAnnouncementTypeMappings = () => {\n    const mapping = {};\n    mapping[ANNOUNCEMENT_TYPES.GENERAL] = 'General';\n    mapping[ANNOUNCEMENT_TYPES.YMYW] = 'Young Men/Young Women';\n    mapping[ANNOUNCEMENT_TYPES.PRIMARY] = 'Primary';\n    mapping[ANNOUNCEMENT_TYPES.ELDERS] = 'Elders';\n    mapping[ANNOUNCEMENT_TYPES.RS] = 'Relief Society';\n    mapping[ANNOUNCEMENT_TYPES.MISSIONARIES] = 'Missionaries';\n    return mapping;\n}\n","import React from 'react';\nimport { getAnnouncementTypeMappings } from './announcementLogic';\nimport marked from 'marked'\nimport parse from 'html-react-parser';\n\nconst AnnouncementSection = (props) => {\n    if(!props.announcements || props.announcements.length === 0) return <></>;\n\n    const announcements = props.announcements.map((announcement, index) => {\n        if(props.type !== announcement.type) return <></>;\n\n        return (\n            <div className='announcement' key={index}>\n                {parse(marked(announcement.message))}\n            </div>\n        );\n    })\n    return (\n        <div className='announcement-section'>\n            <div className='announcement-heading'><strong>{getAnnouncementTypeMappings()[props.type]}</strong></div>\n            {announcements}\n        </div>\n    )\n}\n\nexport default AnnouncementSection;","import React, {useEffect} from 'react';\nimport { getLatestAnnouncements } from '../../client/awsClient';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport { setAnnouncements } from '../../state/actions';\nimport { ANNOUNCEMENT_TYPES } from '../shared/shared-defs';\nimport { getAnnouncementsByType } from './announcementLogic';\nimport AnnouncementSection from './announcementSection';\nimport './announcements.scss'\n\nconst Announcements = () => {\n    const { announcements } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getAnnouncements = async () => {\n            const latestAnnouncements = await getLatestAnnouncements();\n            if(latestAnnouncements.error) {\n                console.log('unable to get latest announcements.');\n            } else {\n                dispatch(setAnnouncements(latestAnnouncements));\n            }\n        }\n        if(announcements === null) {\n            getAnnouncements();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(!announcements) return <></>;\n\n    const groupedAnnouncements = Object.values(ANNOUNCEMENT_TYPES).map((value, index) => {\n        const filteredAnnouncements = getAnnouncementsByType(value, announcements);\n        return <AnnouncementSection type={value} announcements={filteredAnnouncements} key={value+index} />\n    })\n\n    return (\n        <div className='announcements-container'>\n            <h2>Announcements</h2>\n            {groupedAnnouncements}\n        </div>\n    )\n}\n\nexport default Announcements;","import React, {useEffect} from 'react';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport { getLatestCover } from '../../client/awsClient';\nimport { setCover } from '../../state/actions';\nimport {DateTime} from 'luxon';\n\nimport './cover.scss';\n\nconst Cover = () => {\n    const { cover } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getCovers = async () => {\n            const cover = await getLatestCover();\n            if(cover.error) {\n                console.log('unable to get latest cover')\n            } else {\n                dispatch(setCover(cover))\n            }\n        }\n        if(cover === null) {\n            getCovers();\n        }\n    },[]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const img = document.getElementsByClassName('cover-image')[0];\n            img.style.top = window.pageYOffset * .4 + 'px';\n            const header = document.getElementsByClassName('cover-header')[0];\n            header.style.top = window.pageYOffset / .85 + 'px';\n        }\n        \n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        }\n    });\n\n    if(cover === null) return <></>;\n\n    const formattedDate = DateTime.fromISO(cover.date).toFormat('MMM d, yyyy');\n    return (\n        <div className='cover-container'>\n            <div className='cover-header'>\n                <img src={cover.logo} alt='logo' id='logo' />\n                <h1>{cover.name}</h1>\n                <h2>{cover.type}</h2>\n                <div className='cover-date'>{formattedDate}</div>\n            </div>\n            <div className=\"cover-image-container\">\n                <img \n                    className='cover-image' \n                    src={cover.image}\n                    alt=''\n                    height={window.innerHeight}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Cover;","import React, {useEffect} from 'react';\nimport { getLatestLesson } from '../../client/awsClient';\nimport { useDispatch, useStore } from '../../state/action-store';\nimport { setLesson } from '../../state/actions';\nimport marked from 'marked'\nimport parse from 'html-react-parser';\nimport './lesson.scss';\n\nconst Lesson = () => {\n    const { lesson } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const handleScroll = (event) => {\n            const lessonContent = document.getElementsByClassName('lesson-content')[0];\n\n            const container = document.getElementsByClassName('lesson-container')[0];\n            const containerRect = container.getBoundingClientRect();\n\n            const lessonImage = document.getElementsByClassName('lesson-image')[0];\n\n            if(containerRect.top < window.innerHeight) {\n                lessonContent.style.top = containerRect.top * .5 + \"px\";\n                lessonImage.style.transform = `scale(${containerRect.top / 1000 + 1.5})`\n            }\n        }\n\n        window.addEventListener('scroll', handleScroll)\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        }\n    })\n\n    useEffect(() => {\n        const getLesson = async () => {\n            const latestLesson = await getLatestLesson();\n            if(latestLesson.error) {\n                console.log('unable to get the latest agenda');\n            } else {\n                dispatch(setLesson(latestLesson));\n            }\n        };\n        if(lesson === null) {\n            getLesson();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(lesson === null) return <></>;\n\n    return (\n        <div className='lesson-container'>\n            <div className='lesson-image-container'>\n                <img\n                    src={lesson.imgURL}\n                    className=\"lesson-image\" \n                    alt=''\n                />\n            </div>\n            <div className='lesson-content'>\n                <h2>{lesson.header}</h2>\n                <div className='lesson-block'>{lesson.block}</div>\n                <div className='lesson-title'>{parse(marked(lesson.title))}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Lesson;","import React from 'react';\nimport './spinner.scss'\nimport {useStore} from '../../state/action-store';\n\nconst Spinner = () => {\n\n    const {errMsg} = useStore();\n\n    let message = errMsg !== undefined ? errMsg : 'Loading...';\n\n    return (\n        <div className='waiting'>\n            <img src={process.env.PUBLIC_URL + '/christuslogo.png'} alt='logo' className='rotate' />\n            <p>{message}</p>\n        </div>\n    )\n}\n\nexport default Spinner;","import React, { useEffect } from 'react';\nimport { getLatestBulletin } from '../../client/awsClient';\nimport { useDispatch, useStore } from '../../state/action-store';\nimport Agenda from '../agenda/agenda';\nimport Announcements from '../announcements/announcements';\nimport Cover from '../cover/cover';\nimport Lesson from '../lesson/lesson';\nimport Spinner from '../shared/spinner';\nimport './program.scss';\n\nconst Program = () => {\n    const { isLoading } = useStore();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const getBulletin = async () => {\n            await getLatestBulletin(dispatch);\n        }\n        getBulletin();\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(isLoading === false) {\n        return (\n            <div className='program-container'>\n                <Cover />\n                <Agenda />\n                <Lesson />\n                <Announcements />\n                <div className='contact'>\n                    For additions/changes to the bulletin please text Bro. Nick Graves\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <Spinner />\n        )\n    }\n}\n\nexport default Program;","import React, {useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from '../../state/action-store';\nimport { setUser, unsetToken } from '../../state/actions';\nimport './login.scss';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    \n    useEffect(() => {\n        const onSignIn = (googleUser) => {\n            // console.log('onSignIn being called');\n            // var profile = googleUser.getBasicProfile();\n            // console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n            // console.log('Full Name: ' + profile.getName());\n            // console.log('Given Name: ' + profile.getGivenName());\n            // console.log('Family Name: ' + profile.getFamilyName());\n            // console.log(\"Image URL: \" + profile.getImageUrl());\n            // console.log(\"Email: \" + profile.getEmail());\n     \n            // The ID token you need to pass to your backend:\n            // let token = googleUser.getAuthResponse().id_token;\n            dispatch(setUser(googleUser));\n            dispatch(unsetToken());\n            history.push('/dashboard');\n        }\n\n        window.gapi.load('auth2', () => {\n            window.gapi.auth2.init({\n                client_id: '877425478598-b7fsqjtjeon0n1nkjn3kqrhdoco82lhi.apps.googleusercontent.com'\n            })\n            .then(() => {\n                window.gapi.signin2.render('my-g-signin', {\n                    'scope': 'profile email',\n                    'width': 200,\n                    'height': 40,\n                    'longtitle': false,\n                    'theme': 'dark',\n                    'onsuccess': onSignIn\n                })\n            })\n            .catch((err) => {\n                throw new Error(\"Unable to authenticate through google. Please try again later\")\n            })\n        })\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div className='login-page'>\n            <div className=\"login-page-header\">Please login with your google account to manage your bulletin</div>\n            <div id=\"my-g-signin\"></div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useStore} from '../../state/action-store';\nimport { isUserActive } from '../admin/loginLogic';\n\nconst SecureRoute = ({ component: Component, ...otherProps }) => {\n    const {user} = useStore();\n    \n    if(user && isUserActive(user)) {\n        return <Route {...otherProps} render={props => <Component {...props} />} />;\n    } else {\n        return <Route {...otherProps} render={props => <Component {...props} />} />;\n        // return <Route {...otherProps} render={props => <Redirect to='/login' />} />;\n    }\n}\n\nexport default SecureRoute;","import {DateTime} from 'luxon';\n\nexport const isUserActive = (user) => {\n    if(user === null) return false;\n    if(user.getAuthResponse().expires_at) {\n        const expired = DateTime.fromMillis(user.getAuthResponse().expires_at);\n        const now = DateTime.local();\n        if(now < expired) return true;\n    }\n    return false;\n}","import React, {useState} from 'react';\nimport './dashboard-tile.scss';\n\nconst DashboardTile = (props) => {\n\n    const [isReverse, setReversed] = useState(false);\n\n    let cn = 'dashboard-tile';\n    cn = props.data.published ? (cn + ' published') : (cn + ' unpublished');\n    let status = props.data.published ? 'LIVE' : 'IN PROGRESS';\n\n    const handleReverse = () => {\n        setReversed(!isReverse);\n    }\n\n    return (\n        <div>\n            <div className={cn + (isReverse ? ' show-reverse' : '')} style={isReverse ? {} : {transitionDelay: '.3s'}}>\n                <div className='status' onClick={() => handleReverse()}>{status}</div>\n                <div className='date'>{props.data.date}</div>\n                <button onClick={() => {}}><img src={process.env.PUBLIC_URL + '/edit_icon.svg'} alt='' height='25' width='25' /></button>\n            </div>\n            <div className={'dashboard-tile reverse' + (isReverse ? ' show-reverse' : '')} onClick={() => handleReverse()} style={isReverse ? {transitionDelay: '.3s'} : {}}>\n                <button>Update Status</button>\n                <button className='destroy'>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default DashboardTile;","import React from 'react';\nimport DashboardTile from './dashboard-tile';\nimport './dashboard.scss';\n\nconst Dashboard = (props) => {\n\n    if(props.data === null) return <div>Loading...</div>\n\n    return (\n        <div className='dashboard-container'>\n            {props.data.map(tile => {\n                return <DashboardTile data={tile} />\n            })}\n        </div>\n    )\n}\n\nexport default Dashboard;","import React from 'react';\nimport './bulletin.scss';\n\nconst Bulletin = () => {\n    return <div>Bulletin</div>\n}\n\nexport default Bulletin;","import React from 'react';\nimport './qr-generator.scss';\n\nconst QRGenerator = () => {\n    return <div>QR Generator</div>\n}\n\nexport default QRGenerator;","import React from 'react';\nimport './nav.scss';\n\nconst Nav = (props) => {\n\n    const names = [ \"Dashboard\", \"Create Bulletin\", \"Generate QR Code\" ];\n\n    const generateButtons = () => {\n        return names.map((name, index) => {\n            let cn = 'nav-button';\n            if(props.navSelected === index) {\n                cn = cn+' nav-selected'\n            }\n            return (\n                <button key={index} className={cn} onClick={() => props.handleNav(index)}>{name}</button>\n            )\n        })\n    }\n\n    return (\n        <div className='nav-container'>\n            {generateButtons()}\n        </div>\n    )\n}\n\nexport default Nav;","import React, { useState } from 'react';\nimport { getDashboard } from '../../client/awsClient';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport Dashboard from './dashboard';\nimport Bulletin from './bulletin';\nimport QRGenerator from './qr-generator';\nimport Nav from './nav';\n\nconst DashboardContainer = () => {\n    const {user, token} = useStore();\n    const dispatch = useDispatch();\n\n    const [navSelected, selectNav] = useState(0);\n\n    const getData = () => {\n        dispatch(getDashboard(dispatch, user.getAuthResponse().id_token, token));\n    }\n\n    const handleNav = (nav) => {\n        selectNav(nav);\n    }\n\n    const activeComponent = () => {\n\n        const mock = [\n            {date: '2020-11-22', published: true}, {date: '2020-11-29', published: false}, {date: '2020-12-06', published: false}\n        ]\n\n        switch (navSelected) {\n            case 0:\n                return <Dashboard data={mock} />\n            case 1:\n                return <Bulletin />\n            case 2:\n                return <QRGenerator />\n            default:\n                return <Dashboard />\n        }\n    }\n\n    return (\n        <div className='admin-container'>\n            <Nav handleNav={handleNav} navSelected={navSelected} />\n            {activeComponent()}\n        </div>\n    )\n}\n\nexport default DashboardContainer;","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Program from './components/program/program';\nimport Login from './components/admin/login';\nimport SecureRoute from './components/shared/secure-route';\nimport './App.css';\nimport DashboardContainer from './components/admin/dashboard-container';\n\nconst App = () => {\n  \n  let routes = (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/\" exact component={Program} />\n        <Route path='/login' exact component={Login} />\n        <SecureRoute path='/dashboard' exact component={DashboardContainer} />\n      </Switch>\n    </div>\n  );\n\n  return (\n    <HashRouter>\n      {routes}\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from './state/action-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}