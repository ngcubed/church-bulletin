{"version":3,"sources":["state/action-defs.js","state/actions.js","client/awsSTS.js","client/awsClient.js","state/action-store.js","components/shared/shared-defs.js","components/agenda/agenda-item.jsx","components/agenda/agendaLogic.js","components/agenda/agenda.jsx","components/announcements/announcementLogic.js","components/announcements/announcementSection.jsx","components/announcements/announcements.jsx","components/cover/cover.jsx","components/lesson/lesson.jsx","components/shared/spinner.jsx","components/program/program.jsx","components/admin/login.jsx","components/admin/dashboard.jsx","components/shared/secure-route.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_COVER","SET_AGENDA","SET_ANNOUNCEMENTS","SET_LESSON","IS_LOADING","SET_BULLETIN","SET_ERROR_MSG","SET_AUTH","UNSET_AUTH","setCover","cover","type","payload","setAgenda","agenda","setAnnouncements","announcements","setLesson","lesson","sts","AWS","STS","getSecureTokensFromSTS","idToken","a","config","RoleArn","RoleSessionName","WebIdentityToken","Promise","resolve","reject","assumeRoleWithWebIdentity","err","data","findNextSunday","daysToSunday","DateTime","local","weekday","plus","days","getLatestBulletin","dispatch","urlParams","URLSearchParams","window","location","search","day","axios","get","headers","params","d","toFormat","response","status","logo","process","bulletin","console","log","statusText","getDashboard","token","request","host","method","url","path","credentials","secretAccessKey","aws4","sign","accessKeyId","sessionToken","getLatestCover","Store","React","createContext","initialState","isLoading","reducer","state","action","errMsg","useStore","findFunc","useContext","useDispatch","StoreProvider","props","useReducer","value","Provider","children","SONG_TYPES","PRAYER_TYPES","AGENDA_ITEMS","ANNOUNCEMENT_TYPES","GENERAL","PRIMARY","YMYW","ELDERS","RS","MISSIONARIES","AgendaItem","label","item","charAt","slice","toLowerCase","title","speakers","find","order","name","prayers","prayer","getPrayerByType","className","song","songs","filter","getSongByType","number","Agenda","useEffect","latestAgenda","error","getAgenda","orderedAgenda","map","agendaItem","index","getAnnouncementTypeMappings","mapping","AnnouncementSection","length","announcement","parse","marked","message","Announcements","latestAnnouncements","getAnnouncements","groupedAnnouncements","Object","values","filteredAnnouncements","messages","getAnnouncementsByType","Cover","getCovers","handleScroll","document","getElementsByClassName","style","top","pageYOffset","addEventListener","removeEventListener","formattedDate","fromISO","date","src","alt","id","image","height","innerHeight","Lesson","event","lessonContent","containerRect","getBoundingClientRect","lessonImage","transform","latestLesson","getLesson","imgURL","header","block","Spinner","undefined","Program","getBulletin","Login","history","useHistory","onSignIn","googleUser","getAuthResponse","id_token","push","gapi","load","auth2","init","client_id","then","signin2","render","Dashboard","onClick","SecureRoute","Component","component","otherProps","to","App","routes","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.457a618e.chunk.js","sourcesContent":["export const SET_COVER = 'SET_COVER';\nexport const SET_AGENDA = 'SET_AGENDA';\nexport const SET_ANNOUNCEMENTS = \"SET_ANNOUNCEMENTS\";\nexport const SET_LESSON = \"SET_LESSON\";\nexport const IS_LOADING = \"IS_LOADING\"\nexport const SET_BULLETIN = \"SET_BULLETIN\";\nexport const SET_ERROR_MSG = \"SET_ERROR_MSG\";\nexport const SET_AUTH = \"SET_AUTH\";\nexport const UNSET_AUTH = \"UNSET_AUTH\";","import {IS_LOADING, SET_AGENDA, SET_ANNOUNCEMENTS, SET_AUTH, SET_BULLETIN, SET_COVER, SET_ERROR_MSG, SET_LESSON, UNSET_AUTH} from './action-defs';\n\nexport const setBulletin = (bulletin) => {\n    return {\n        type: SET_BULLETIN,\n        payload: bulletin\n    }\n}\n\nexport const setErrorMessage = (message) => {\n    return {\n        type: SET_ERROR_MSG,\n        payload: message\n    }\n}\n\nexport const setCover = (cover) => {\n    return {\n        type: SET_COVER,\n        payload: cover\n    }\n}\n\nexport const setAgenda = (agenda) => {\n    return {\n        type: SET_AGENDA,\n        payload: agenda\n    }\n}\n\nexport const setAnnouncements = (announcements) => {\n    return {\n        type: SET_ANNOUNCEMENTS,\n        payload: announcements\n    }\n}\n\nexport const setLesson = (lesson) => {\n    return {\n        type: SET_LESSON,\n        payload: lesson\n    }\n}\n\nexport const setAuth = (auth) => {\n    return {\n        type: SET_AUTH,\n        payload: auth\n    }\n}\n\nexport const unsetAuth = () => {\n    return {\n        type: UNSET_AUTH\n    }\n}\n\nexport const isLoading = (isLoading) => {\n    return {\n        type: IS_LOADING,\n        payload: isLoading\n    }\n}","import AWS from 'aws-sdk';\nlet sts = new AWS.STS({});\n\nexport const getSecureTokensFromSTS = async (idToken) => {\n    const config = {\n        RoleArn: 'arn:aws:iam::164535879341:role/church-bulletin-admin-role',\n        RoleSessionName: 'church-bulletin-admin-session',\n        WebIdentityToken: idToken\n    };\n    return await new Promise((resolve, reject) => {\n        sts.assumeRoleWithWebIdentity(config, (err, data) => {\n            if(err) {\n                reject(err);\n            }\n            if(data) {\n                resolve(data);\n            }\n        });\n    });\n}\n","import axios from 'axios';\nimport {DateTime} from 'luxon';\nimport { isLoading, setBulletin, setErrorMessage } from '../state/actions';\nimport { getSecureTokensFromSTS } from './awsSTS';\nimport aws4 from 'aws4';\nimport AWS from 'aws-sdk';\n\nconst findNextSunday = () => {\n    let daysToSunday = 7 - DateTime.local().weekday;\n    return DateTime.local().plus({days: daysToSunday});\n}\n\nexport const getLatestBulletin = async (dispatch) => {\n\n    let urlParams = new URLSearchParams(window.location.search);\n\n    let day = DateTime.local();\n    if(day.weekday !== '0') {\n        day = findNextSunday();\n    }\n\n    try {\n        dispatch(isLoading(true));\n        let response = await axios.get('https://7qseesv2jh.execute-api.us-east-2.amazonaws.com/default/churchBulletin', {\n                headers: {\n                    'X-Api-Key': `${urlParams.get('key')}`,\n                    'Content-Type' : 'application/json'\n                }, \n                params: {\n                    d: `${day.toFormat('yyyy-MM-dd')}`\n                }\n            });\n        if(response.status === 200) {\n            response.data.cover.logo = process.env.PUBLIC_URL + '/oaktree.png';\n            dispatch(setBulletin(response.data));\n        } else {\n            console.log(response.status, \" \", response.statusText,\" \", response)\n        }\n    } catch (error) {\n        dispatch(setErrorMessage('Please refresh to try again'));\n    }\n}\n\nexport const getDashboard = async (dispatch, token) => {\n    try {\n        const data = await getSecureTokensFromSTS(token);\n        console.log('back in dashboard, data is: ', data);\n        let request = {\n            host: 'c43o0u35nf.execute-api.us-east-2.amazonaws.com',\n            method: 'GET',\n            url: 'https://c43o0u35nf.execute-api.us-east-2.amazonaws.com/default',\n            path: '/default'\n        }\n        console.log('got the secure token. data is: ', data);\n        console.log('adn the aws cred config is ', AWS.config.credentials.secretAccessKey);\n        let signedRequest = aws4.sign(request, {\n            secretAccessKey: AWS.config.credentials.secretAccessKey,\n            accessKeyId: AWS.config.credentials.accessKeyId,\n            sessionToken: AWS.config.credentials.sessionToken\n        });\n        // let response = await axios.get('', {\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     }\n        // });\n        // if(response.status === 200) {\n        //     console.log('200 response: ', response.data);\n        // }\n    } catch(err) {\n        console.log('back in dashboard, err is : ', err)\n    }\n}\n\nexport const getLatestCover = async () => {\n    \n}\n\nexport const getLatestAgenda = () => {\n\n}\n\nexport const getLatestAnnouncements = () => {\n    \n}\n\nexport const getLatestLesson = () => {\n\n}","import React, {useReducer, useContext} from 'react';\n\nimport {IS_LOADING, SET_AGENDA, SET_ANNOUNCEMENTS, SET_AUTH, SET_BULLETIN, SET_COVER, SET_ERROR_MSG, SET_LESSON, UNSET_AUTH} from './action-defs';\n\nexport const Store = React.createContext();\n\nconst initialState = {\n    cover: null,\n    agenda: null,\n    announcements: null,\n    lesson: null,\n    isLoading: true,\n    token: null\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_BULLETIN:\n            return {\n                ...state,\n                cover: action.payload.cover,\n                agenda: action.payload.agenda,\n                announcements: action.payload.announcements,\n                lesson: action.payload.lesson,\n                isLoading: false\n            }\n        case SET_COVER:\n            return {...state, cover: action.payload}   \n        case SET_AGENDA:\n            return {...state, agenda: action.payload}\n        case SET_ANNOUNCEMENTS:\n            return {...state, announcements: action.payload}\n        case SET_LESSON:\n            return {...state, lesson: action.payload}\n        case IS_LOADING:\n            return {...state, isLoading: action.payload}\n        case SET_ERROR_MSG:\n            return {...state, errMsg: action.payload}\n        case SET_AUTH:\n            return {...state, token: action.payload}\n        case UNSET_AUTH:\n            return {...state, token: null}\n        default:\n            return state;\n    }\n}\n\nexport const useStore = (findFunc) => {\n    const {state} = useContext(Store);\n    return findFunc ? findFunc(state) : state;\n}\n\nexport const useDispatch = () => {\n    const {dispatch} = useContext(Store);\n    return dispatch; \n}\n\nexport const StoreProvider = (props) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const value = {\n        state,\n        dispatch\n    };\n\n    return (\n        <Store.Provider value={value}>{props.children}</Store.Provider>\n    )\n}","export const SONG_TYPES = {\n    OPENING: \"OPENING\",\n    CLOSING: \"CLOSING\",\n    INTERMEDIATE: \"INTERMEDIATE\",\n    SPECIAL: \"SPECIAL\",\n    SACRAMENT: \"SACRAMENT\"\n}\n\nexport const PRAYER_TYPES = {\n    OPENING: \"OPENING\",\n    CLOSING: \"CLOSING\"\n}\n\nexport const AGENDA_ITEMS = {\n    SONG: \"SONG\",\n    SPEAKER: \"SPEAKER\",\n    PRAYER: \"PRAYER\",\n    TESTIMONY: \"TESTIMONY\",\n    SACRAMENT: \"SACRAMENT\",\n    PRESIDING: \"PRESIDING\",\n    CONDUCTING: 'CONDUCTING',\n    CHORISTER: 'CHORISTER',\n    ORGANIST: 'ORGANIST'\n}\n\nexport const ANNOUNCEMENT_TYPES = {\n    GENERAL: \"GENERAL\",\n    PRIMARY: 'PRIMARY',\n    YMYW: 'YMYW',\n    ELDERS: 'ELDERS',\n    RS: 'RS',\n    MISSIONARIES: 'MISSIONARIES'\n}","import React from 'react';\nimport { useStore } from '../../state/action-store'\nimport { AGENDA_ITEMS, PRAYER_TYPES, SONG_TYPES } from '../shared/shared-defs';\nimport { getPrayerByType, getSongByType, getSpeakerByOrder } from './agendaLogic';\n\nconst AgendaItem = (props) => {\n    const { agenda } = useStore();\n    if(!agenda) return <></>;\n\n    let label = props.item.charAt(0) + props.item.slice(1).toLowerCase() + ':';\n    let value;\n    let title = '';\n\n    switch (props.item) {\n        case AGENDA_ITEMS.PRESIDING:\n        case AGENDA_ITEMS.CONDUCTING:\n        case AGENDA_ITEMS.CHORISTER:\n        case AGENDA_ITEMS.ORGANIST:\n            value = agenda[props.item.toLowerCase()];\n            break;\n        case AGENDA_ITEMS.SPEAKER:\n            const speaker = getSpeakerByOrder(props.type, agenda.speakers);\n            value = speaker.name;\n            break;\n        case AGENDA_ITEMS.PRAYER:\n            const prayer = getPrayerByType(props.type, agenda.prayers);\n            value = prayer.name;\n            if(props.type === PRAYER_TYPES.OPENING) {\n                label = 'Invocation'\n            }\n            if(props.type === PRAYER_TYPES.CLOSING) {\n                label = 'Benediction'\n            }\n            break;\n        case AGENDA_ITEMS.SACRAMENT:\n        case AGENDA_ITEMS.TESTIMONY:\n            label = '';\n            value = '';\n            if(props.item === AGENDA_ITEMS.TESTIMONY) {\n                title = <div className='agenda-item-title'><strong>Sharing of Testimonies</strong></div>\n            } else {\n                title = <div className='agenda-item-title'><strong>Administration of the Sacrament</strong></div>\n            }\n            break;\n        case AGENDA_ITEMS.SONG:\n            const song = getSongByType(props.type, agenda.songs);\n            if(props.type === SONG_TYPES.SPECIAL) {\n                label = 'Special Musical Number:';\n            } else {\n                label = props.type.charAt(0) + props.type.slice(1).toLowerCase() + \" Song:\";\n            }\n            value = song.number;\n            title = <div className='agenda-item-title'>{song.title}</div>\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className='agenda-item-container'>\n            <div className='agenda-item-label-value'>\n                <div className='agenda-item-label'>{label}</div>\n                <div className='agenda-item-value'>{value}</div>\n            </div>\n          {title}\n        </div>\n    );\n}\n\nexport default AgendaItem;","import { SONG_TYPES } from \"../shared/shared-defs\"\n\nexport const getSongByType = (type, songs) => {\n    if(type === SONG_TYPES.SPECIAL) {\n        return songs.filter((song) => {\n            return song.type === type\n        })\n    } else {\n        return songs.find((song) => {\n            return song.type === type\n        })\n    }\n}\n\nexport const getSpeakerByOrder = (type, speakers) => {\n    return speakers.find(order => order.order === type)\n}\n\nexport const getPrayerByType = (type, prayers) => {\n    return prayers.find(prayer => prayer.type === type)\n}","import React, {useEffect} from 'react';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport {getLatestAgenda} from '../../client/awsClient';\nimport {setAgenda} from '../../state/actions';\nimport './agenda.scss';\nimport AgendaItem from './agenda-item';\nimport { AGENDA_ITEMS } from '../shared/shared-defs';\n\nconst Agenda = () => {\n    const { agenda } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getAgenda = async () => {\n            const latestAgenda = await getLatestAgenda();\n            if(latestAgenda.error) {\n                console.log('unable to get the latest agenda');\n            } else {\n                dispatch(setAgenda(latestAgenda));\n            }\n        };\n        if(agenda === null) {\n            getAgenda();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(!agenda) return <></>;\n\n    const orderedAgenda = agenda.order.map((agendaItem, index) => {\n        return <AgendaItem item={agendaItem.item} type={agendaItem.type} key={agendaItem.item+agendaItem.type+index} />\n    })\n\n    return (\n        <div className='agenda-container'>\n            <h2>Agenda</h2>\n            <div className='agenda-whos-who'>\n                <AgendaItem item={AGENDA_ITEMS.PRESIDING} />\n                <AgendaItem item={AGENDA_ITEMS.CONDUCTING} />\n                <AgendaItem item={AGENDA_ITEMS.CHORISTER} />\n                <AgendaItem item={AGENDA_ITEMS.ORGANIST} />\n            </div>\n            {orderedAgenda}\n        </div>\n    )\n}\n\nexport default Agenda;","import { ANNOUNCEMENT_TYPES } from \"../shared/shared-defs\";\n\nexport const getAnnouncementsByType = (type, announcements) => {\n    return announcements.messages.filter(announcement => announcement.type === type)\n}\n\nexport const getAnnouncementTypeMappings = () => {\n    const mapping = {};\n    mapping[ANNOUNCEMENT_TYPES.GENERAL] = 'General';\n    mapping[ANNOUNCEMENT_TYPES.YMYW] = 'Young Men/Young Women';\n    mapping[ANNOUNCEMENT_TYPES.PRIMARY] = 'Primary';\n    mapping[ANNOUNCEMENT_TYPES.ELDERS] = 'Elders';\n    mapping[ANNOUNCEMENT_TYPES.RS] = 'Relief Society';\n    mapping[ANNOUNCEMENT_TYPES.MISSIONARIES] = 'Missionaries';\n    return mapping;\n}\n","import React from 'react';\nimport { getAnnouncementTypeMappings } from './announcementLogic';\nimport marked from 'marked'\nimport parse from 'html-react-parser';\n\nconst AnnouncementSection = (props) => {\n    if(!props.announcements || props.announcements.length === 0) return <></>;\n\n    const announcements = props.announcements.map((announcement, index) => {\n        if(props.type !== announcement.type) return <></>;\n\n        return (\n            <div className='announcement' key={index}>\n                {parse(marked(announcement.message))}\n            </div>\n        );\n    })\n    return (\n        <div className='announcement-section'>\n            <div className='announcement-heading'><strong>{getAnnouncementTypeMappings()[props.type]}</strong></div>\n            {announcements}\n        </div>\n    )\n}\n\nexport default AnnouncementSection;","import React, {useEffect} from 'react';\nimport { getLatestAnnouncements } from '../../client/awsClient';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport { setAnnouncements } from '../../state/actions';\nimport { ANNOUNCEMENT_TYPES } from '../shared/shared-defs';\nimport { getAnnouncementsByType } from './announcementLogic';\nimport AnnouncementSection from './announcementSection';\nimport './announcements.scss'\n\nconst Announcements = () => {\n    const { announcements } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getAnnouncements = async () => {\n            const latestAnnouncements = await getLatestAnnouncements();\n            if(latestAnnouncements.error) {\n                console.log('unable to get latest announcements.');\n            } else {\n                dispatch(setAnnouncements(latestAnnouncements));\n            }\n        }\n        if(announcements === null) {\n            getAnnouncements();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(!announcements) return <></>;\n\n    const groupedAnnouncements = Object.values(ANNOUNCEMENT_TYPES).map((value, index) => {\n        const filteredAnnouncements = getAnnouncementsByType(value, announcements);\n        return <AnnouncementSection type={value} announcements={filteredAnnouncements} key={value+index} />\n    })\n\n    return (\n        <div className='announcements-container'>\n            <h2>Announcements</h2>\n            {groupedAnnouncements}\n        </div>\n    )\n}\n\nexport default Announcements;","import React, {useEffect} from 'react';\nimport {useStore, useDispatch} from '../../state/action-store';\nimport { getLatestCover } from '../../client/awsClient';\nimport { setCover } from '../../state/actions';\nimport {DateTime} from 'luxon';\n\nimport './cover.scss';\n\nconst Cover = () => {\n    const { cover } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getCovers = async () => {\n            const cover = await getLatestCover();\n            if(cover.error) {\n                console.log('unable to get latest cover')\n            } else {\n                dispatch(setCover(cover))\n            }\n        }\n        if(cover === null) {\n            getCovers();\n        }\n    },[]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const img = document.getElementsByClassName('cover-image')[0];\n            img.style.top = window.pageYOffset * .4 + 'px';\n            const header = document.getElementsByClassName('cover-header')[0];\n            header.style.top = window.pageYOffset / .85 + 'px';\n        }\n        \n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        }\n    });\n\n    if(cover === null) return <></>;\n\n    const formattedDate = DateTime.fromISO(cover.date).toFormat('MMM d, yyyy');\n    return (\n        <div className='cover-container'>\n            <div className='cover-header'>\n                <img src={cover.logo} alt='logo' id='logo' />\n                <h1>{cover.name}</h1>\n                <h2>{cover.type}</h2>\n                <div className='cover-date'>{formattedDate}</div>\n            </div>\n            <div className=\"cover-image-container\">\n                <img \n                    className='cover-image' \n                    src={cover.image}\n                    alt=''\n                    height={window.innerHeight}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Cover;","import React, {useEffect} from 'react';\nimport { getLatestLesson } from '../../client/awsClient';\nimport { useDispatch, useStore } from '../../state/action-store';\nimport { setLesson } from '../../state/actions';\nimport marked from 'marked'\nimport parse from 'html-react-parser';\nimport './lesson.scss';\n\nconst Lesson = () => {\n    const { lesson } = useStore();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const handleScroll = (event) => {\n            const lessonContent = document.getElementsByClassName('lesson-content')[0];\n\n            const container = document.getElementsByClassName('lesson-container')[0];\n            const containerRect = container.getBoundingClientRect();\n\n            const lessonImage = document.getElementsByClassName('lesson-image')[0];\n\n            if(containerRect.top < window.innerHeight) {\n                lessonContent.style.top = containerRect.top * .5 + \"px\";\n                lessonImage.style.transform = `scale(${containerRect.top / 1000 + 1.5})`\n            }\n        }\n\n        window.addEventListener('scroll', handleScroll)\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        }\n    })\n\n    useEffect(() => {\n        const getLesson = async () => {\n            const latestLesson = await getLatestLesson();\n            if(latestLesson.error) {\n                console.log('unable to get the latest agenda');\n            } else {\n                dispatch(setLesson(latestLesson));\n            }\n        };\n        if(lesson === null) {\n            getLesson();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(lesson === null) return <></>;\n\n    return (\n        <div className='lesson-container'>\n            <div className='lesson-image-container'>\n                <img\n                    src={lesson.imgURL}\n                    className=\"lesson-image\" \n                    alt=''\n                />\n            </div>\n            <div className='lesson-content'>\n                <h2>{lesson.header}</h2>\n                <div className='lesson-block'>{lesson.block}</div>\n                <div className='lesson-title'>{parse(marked(lesson.title))}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Lesson;","import React from 'react';\nimport './spinner.scss'\nimport {useStore} from '../../state/action-store';\n\nconst Spinner = () => {\n\n    const {errMsg} = useStore();\n\n    let message = errMsg !== undefined ? errMsg : 'Loading...';\n\n    return (\n        <div className='waiting'>\n            <img src={process.env.PUBLIC_URL + '/christuslogo.png'} alt='logo' className='rotate' />\n            <p>{message}</p>\n        </div>\n    )\n}\n\nexport default Spinner;","import React, { useEffect } from 'react';\nimport { getLatestBulletin } from '../../client/awsClient';\nimport { useDispatch, useStore } from '../../state/action-store';\nimport Agenda from '../agenda/agenda';\nimport Announcements from '../announcements/announcements';\nimport Cover from '../cover/cover';\nimport Lesson from '../lesson/lesson';\nimport Spinner from '../shared/spinner';\nimport './program.scss';\n\nconst Program = () => {\n    const { isLoading } = useStore();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const getBulletin = async () => {\n            await getLatestBulletin(dispatch);\n        }\n        getBulletin();\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    if(isLoading === false) {\n        return (\n            <div className='program-container'>\n                <Cover />\n                <Agenda />\n                <Lesson />\n                <Announcements />\n                <div className='contact'>\n                    For additions/changes to the bulletin please text Bro. Nick Graves\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <Spinner />\n        )\n    }\n}\n\nexport default Program;","import React, {useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from '../../state/action-store';\nimport { setAuth } from '../../state/actions';\nimport './login.scss';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    \n    useEffect(() => {\n        const onSignIn = (googleUser) => {\n            // console.log('onSignIn being called');\n            // var profile = googleUser.getBasicProfile();\n            // console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n            // console.log('Full Name: ' + profile.getName());\n            // console.log('Given Name: ' + profile.getGivenName());\n            // console.log('Family Name: ' + profile.getFamilyName());\n            // console.log(\"Image URL: \" + profile.getImageUrl());\n            // console.log(\"Email: \" + profile.getEmail());\n     \n            // The ID token you need to pass to your backend:\n            let token = googleUser.getAuthResponse().id_token;\n            dispatch(setAuth(token));\n            history.push('/dashboard');\n        }\n\n        window.gapi.load('auth2', () => {\n            window.gapi.auth2.init({\n                client_id: '877425478598-b7fsqjtjeon0n1nkjn3kqrhdoco82lhi.apps.googleusercontent.com'\n            })\n            .then(() => {\n                window.gapi.signin2.render('my-g-signin', {\n                    'scope': 'profile email',\n                    'width': 200,\n                    'height': 40,\n                    'longtitle': false,\n                    'theme': 'dark',\n                    'onsuccess': onSignIn\n                })\n            })\n        })\n    }, []);\n\n    return (\n        <div className='login-page'>\n            <div className=\"login-page-header\">Please login with your google account to manage your bulletin</div>\n            <div id=\"my-g-signin\"></div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { getDashboard } from '../../client/awsClient';\nimport {useStore, useDispatch} from '../../state/action-store';\n\nconst Dashboard = () => {\n    const {token} = useStore();\n    const dispatch = useDispatch();\n\n    const getData = () => {\n        dispatch(getDashboard(dispatch, token));\n    }\n\n    return (\n        <div>\n            <div>Dashboard</div>\n            <button onClick={getData}>Get Data</button>\n        </div>\n    )\n}\n\nexport default Dashboard;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useStore} from '../../state/action-store';\n\nconst SecureRoute = ({ component: Component, ...otherProps }) => {\n    const {token} = useStore();\n    \n    if(token) {\n        return <Route {...otherProps} render={props => <Component {...props} />} />;\n    } else {\n        return <Route {...otherProps} render={props => <Redirect to='/login' />} />;\n    }\n}\n\nexport default SecureRoute;","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Program from './components/program/program';\nimport Login from './components/admin/login';\nimport Dashboard from './components/admin/dashboard';\nimport SecureRoute from './components/shared/secure-route';\nimport './App.css';\n\nconst App = () => {\n  \n  let routes = (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/\" exact component={Program} />\n        <Route path='/login' exact component={Login} />\n        <SecureRoute path='/dashboard' exact component={Dashboard} />\n      </Switch>\n    </div>\n  );\n\n  return (\n    <HashRouter>\n      {routes}\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from './state/action-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}